// This file was auto-generated by Fern from our API Definition.

package square

type BulkRetrieveBookingsRequest struct {
	// A non-empty list of [Booking](entity:Booking) IDs specifying bookings to retrieve.
	BookingIDs []string `json:"booking_ids,omitempty" url:"-"`
}

type BulkRetrieveTeamMemberBookingProfilesRequest struct {
	// A non-empty list of IDs of team members whose booking profiles you want to retrieve.
	TeamMemberIDs []string `json:"team_member_ids,omitempty" url:"-"`
}

type ListLocationBookingProfilesRequest struct {
	// The maximum number of results to return in a paged response.
	Limit *int `json:"-" url:"limit,omitempty"`
	// The pagination cursor from the preceding response to return the next page of the results. Do not set this when retrieving the first page of the results.
	Cursor *string `json:"-" url:"cursor,omitempty"`
}

type SearchAvailabilityRequest struct {
	// Query conditions used to filter buyer-accessible booking availabilities.
	Query *SearchAvailabilityQuery `json:"query,omitempty" url:"-"`
}

type CancelBookingRequest struct {
	// A unique key to make this request an idempotent operation.
	IdempotencyKey *string `json:"idempotency_key,omitempty" url:"-"`
	// The revision number for the booking used for optimistic concurrency.
	BookingVersion *int `json:"booking_version,omitempty" url:"-"`
}

type CreateBookingRequest struct {
	// A unique key to make this request an idempotent operation.
	IdempotencyKey *string `json:"idempotency_key,omitempty" url:"-"`
	// The details of the booking to be created.
	Booking *Booking `json:"booking,omitempty" url:"-"`
}

type BookingsListRequest struct {
	// The maximum number of results per page to return in a paged response.
	Limit *int `json:"-" url:"limit,omitempty"`
	// The pagination cursor from the preceding response to return the next page of the results. Do not set this when retrieving the first page of the results.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// The [customer](entity:Customer) for whom to retrieve bookings. If this is not set, bookings for all customers are retrieved.
	CustomerID *string `json:"-" url:"customer_id,omitempty"`
	// The team member for whom to retrieve bookings. If this is not set, bookings of all members are retrieved.
	TeamMemberID *string `json:"-" url:"team_member_id,omitempty"`
	// The location for which to retrieve bookings. If this is not set, all locations' bookings are retrieved.
	LocationID *string `json:"-" url:"location_id,omitempty"`
	// The RFC 3339 timestamp specifying the earliest of the start time. If this is not set, the current time is used.
	StartAtMin *string `json:"-" url:"start_at_min,omitempty"`
	// The RFC 3339 timestamp specifying the latest of the start time. If this is not set, the time of 31 days after `start_at_min` is used.
	StartAtMax *string `json:"-" url:"start_at_max,omitempty"`
}

type UpdateBookingRequest struct {
	// A unique key to make this request an idempotent operation.
	IdempotencyKey *string `json:"idempotency_key,omitempty" url:"-"`
	// The booking to be updated. Individual attributes explicitly specified here override the corresponding values of the existing booking.
	Booking *Booking `json:"booking,omitempty" url:"-"`
}
