// Code generated by Fern. DO NOT EDIT.

package images

import (
	context "context"
	v2 "github.com/square/square-go-sdk/v2"
	catalog "github.com/square/square-go-sdk/v2/catalog"
	core "github.com/square/square-go-sdk/v2/core"
	internal "github.com/square/square-go-sdk/v2/internal"
	option "github.com/square/square-go-sdk/v2/option"
	http "net/http"
	os "os"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.Token == "" {
		options.Token = os.Getenv("SQUARE_TOKEN")
	}
	if options.Version == "" {
		options.Version = os.Getenv("VERSION")
	}
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Uploads an image file to be represented by a [CatalogImage](entity:CatalogImage) object that can be linked to an existing
// [CatalogObject](entity:CatalogObject) instance. The resulting `CatalogImage` is unattached to any `CatalogObject` if the `object_id`
// is not specified.
//
// This `CreateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in
// JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB.
func (c *Client) Create(
	ctx context.Context,
	request *catalog.CreateImagesRequest,
	opts ...option.RequestOption,
) (*v2.CreateCatalogImageResponse, error) {
	response, err := c.WithRawResponse.Create(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Uploads a new image file to replace the existing one in the specified [CatalogImage](entity:CatalogImage) object.
//
// This `UpdateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in
// JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB.
func (c *Client) Update(
	ctx context.Context,
	request *catalog.UpdateImagesRequest,
	opts ...option.RequestOption,
) (*v2.UpdateCatalogImageResponse, error) {
	response, err := c.WithRawResponse.Update(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
