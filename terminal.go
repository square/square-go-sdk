// This file was auto-generated by Fern from our API Definition.

package square

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/square/square-go-sdk/v2/internal"
)

type DismissTerminalActionRequest struct {
	// Unique ID for the `TerminalAction` associated with the action to be dismissed.
	ActionID string `json:"-" url:"-"`
}

type DismissTerminalCheckoutRequest struct {
	// Unique ID for the `TerminalCheckout` associated with the checkout to be dismissed.
	CheckoutID string `json:"-" url:"-"`
}

type DismissTerminalRefundRequest struct {
	// Unique ID for the `TerminalRefund` associated with the refund to be dismissed.
	TerminalRefundID string `json:"-" url:"-"`
}

type DismissTerminalActionResponse struct {
	// Information on errors encountered during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// Current state of the action to be dismissed.
	Action *TerminalAction `json:"action,omitempty" url:"action,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DismissTerminalActionResponse) GetErrors() []*Error {
	if d == nil {
		return nil
	}
	return d.Errors
}

func (d *DismissTerminalActionResponse) GetAction() *TerminalAction {
	if d == nil {
		return nil
	}
	return d.Action
}

func (d *DismissTerminalActionResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DismissTerminalActionResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DismissTerminalActionResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DismissTerminalActionResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DismissTerminalActionResponse) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type DismissTerminalCheckoutResponse struct {
	// Information on errors encountered during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// Current state of the checkout to be dismissed.
	Checkout *TerminalCheckout `json:"checkout,omitempty" url:"checkout,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DismissTerminalCheckoutResponse) GetErrors() []*Error {
	if d == nil {
		return nil
	}
	return d.Errors
}

func (d *DismissTerminalCheckoutResponse) GetCheckout() *TerminalCheckout {
	if d == nil {
		return nil
	}
	return d.Checkout
}

func (d *DismissTerminalCheckoutResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DismissTerminalCheckoutResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DismissTerminalCheckoutResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DismissTerminalCheckoutResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DismissTerminalCheckoutResponse) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type DismissTerminalRefundResponse struct {
	// Information on errors encountered during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// Current state of the refund to be dismissed.
	Refund *TerminalRefund `json:"refund,omitempty" url:"refund,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DismissTerminalRefundResponse) GetErrors() []*Error {
	if d == nil {
		return nil
	}
	return d.Errors
}

func (d *DismissTerminalRefundResponse) GetRefund() *TerminalRefund {
	if d == nil {
		return nil
	}
	return d.Refund
}

func (d *DismissTerminalRefundResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DismissTerminalRefundResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DismissTerminalRefundResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DismissTerminalRefundResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DismissTerminalRefundResponse) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}
