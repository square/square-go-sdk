// This file was auto-generated by Fern from our API Definition.

package square

type RefundPaymentRequest struct {
	//	A unique string that identifies this `RefundPayment` request. The key can be any valid string
	//
	// but must be unique for every `RefundPayment` request.
	//
	// Keys are limited to a max of 45 characters - however, the number of allowed characters might be
	// less than 45, if multi-byte characters are used.
	//
	// For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
	IdempotencyKey string `json:"idempotency_key" url:"-"`
	// The amount of money to refund.
	//
	// This amount cannot be more than the `total_money` value of the payment minus the total
	// amount of all previously completed refunds for this payment.
	//
	// This amount must be specified in the smallest denomination of the applicable currency
	// (for example, US dollar amounts are specified in cents). For more information, see
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
	//
	// The currency code must match the currency associated with the business
	// that is charging the card.
	AmountMoney *Money `json:"amount_money,omitempty" url:"-"`
	// The amount of money the developer contributes to help cover the refunded amount.
	// This amount is specified in the smallest denomination of the applicable currency (for example,
	// US dollar amounts are specified in cents).
	//
	// The value cannot be more than the `amount_money`.
	//
	// You can specify this parameter in a refund request only if the same parameter was also included
	// when taking the payment. This is part of the application fee scenario the API supports. For more
	// information, see [Take Payments and Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).
	//
	// To set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required.
	// For more information, see [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).
	AppFeeMoney *Money `json:"app_fee_money,omitempty" url:"-"`
	// The unique ID of the payment being refunded.
	// Required when unlinked=false, otherwise must not be set.
	PaymentID *string `json:"payment_id,omitempty" url:"-"`
	// The ID indicating where funds will be refunded to. Required for unlinked refunds. For more
	// information, see [Create an unlinked refund](https://developer.squareup.com/docs/payments-api/refund-payments#create-an-unlinked-refund).
	//
	// For refunds linked to Square payments, destination_id is usually omitted; in this case, funds
	// will be returned to the original payment source. The field may be specified in order to request
	// a cross-method refund to a gift card. For more information,
	// see [Cross-method refunds to gift cards](https://developer.squareup.com/docs/payments-api/refund-payments#cross-method-refunds-to-gift-cards).
	DestinationID *string `json:"destination_id,omitempty" url:"-"`
	// Indicates that the refund is not linked to a Square payment.
	// If set to true, `destination_id` and `location_id` must be supplied while `payment_id` must not
	// be provided.
	Unlinked *bool `json:"unlinked,omitempty" url:"-"`
	// The location ID associated with the unlinked refund.
	// Required for requests specifying `unlinked=true`.
	// Otherwise, if included when `unlinked=false`, will throw an error.
	LocationID *string `json:"location_id,omitempty" url:"-"`
	// The [Customer](entity:Customer) ID of the customer associated with the refund.
	// This is required if the `destination_id` refers to a card on file created using the Cards
	// API. Only allowed when `unlinked=true`.
	CustomerID *string `json:"customer_id,omitempty" url:"-"`
	// A description of the reason for the refund.
	Reason *string `json:"reason,omitempty" url:"-"`
	//	Used for optimistic concurrency. This opaque token identifies the current `Payment`
	//
	// version that the caller expects. If the server has a different version of the Payment,
	// the update fails and a response with a VERSION_MISMATCH error is returned.
	// If the versions match, or the field is not provided, the refund proceeds as normal.
	PaymentVersionToken *string `json:"payment_version_token,omitempty" url:"-"`
	// An optional [TeamMember](entity:TeamMember) ID to associate with this refund.
	TeamMemberID *string `json:"team_member_id,omitempty" url:"-"`
	// Additional details required when recording a cash refund (`destination_id` is CASH).
	CashDetails *DestinationDetailsCashRefundDetails `json:"cash_details,omitempty" url:"-"`
	// Additional details required when recording an external refund
	// (`destination_id` is EXTERNAL).
	ExternalDetails *DestinationDetailsExternalRefundDetails `json:"external_details,omitempty" url:"-"`
}

type RefundsListRequest struct {
	// Indicates the start of the time range to retrieve each `PaymentRefund` for, in RFC 3339
	// format. The range is determined using the `created_at` field for each `PaymentRefund`.
	//
	// Default: The current time minus one year.
	BeginTime *string `json:"-" url:"begin_time,omitempty"`
	// Indicates the end of the time range to retrieve each `PaymentRefund` for, in RFC 3339
	// format. The range is determined using the `created_at` field for each `PaymentRefund`.
	//
	// Default: The current time.
	EndTime *string `json:"-" url:"end_time,omitempty"`
	// The order in which results are listed by `PaymentRefund.created_at`:
	//
	// - `ASC` - Oldest to newest.
	// - `DESC` - Newest to oldest (default).
	SortOrder *string `json:"-" url:"sort_order,omitempty"`
	// A pagination cursor returned by a previous call to this endpoint.
	// Provide this cursor to retrieve the next set of results for the original query.
	//
	// For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Limit results to the location supplied. By default, results are returned
	// for all locations associated with the seller.
	LocationID *string `json:"-" url:"location_id,omitempty"`
	// If provided, only refunds with the given status are returned.
	// For a list of refund status values, see [PaymentRefund](entity:PaymentRefund).
	//
	// Default: If omitted, refunds are returned regardless of their status.
	Status *string `json:"-" url:"status,omitempty"`
	// If provided, only returns refunds whose payments have the indicated source type.
	// Current values include `CARD`, `BANK_ACCOUNT`, `WALLET`, `CASH`, and `EXTERNAL`.
	// For information about these payment source types, see
	// [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments).
	//
	// Default: If omitted, refunds are returned regardless of the source type.
	SourceType *string `json:"-" url:"source_type,omitempty"`
	// The maximum number of results to be returned in a single page.
	//
	// It is possible to receive fewer results than the specified limit on a given page.
	//
	// If the supplied value is greater than 100, no more than 100 results are returned.
	//
	// Default: 100
	Limit *int `json:"-" url:"limit,omitempty"`
}
