// Code generated by Fern. DO NOT EDIT.

package checkouts

import (
	context "context"
	v2 "github.com/square/square-go-sdk/v2"
	core "github.com/square/square-go-sdk/v2/core"
	internal "github.com/square/square-go-sdk/v2/internal"
	option "github.com/square/square-go-sdk/v2/option"
	terminal "github.com/square/square-go-sdk/v2/terminal"
	http "net/http"
	os "os"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.Token == "" {
		options.Token = os.Getenv("SQUARE_TOKEN")
	}
	if options.Version == "" {
		options.Version = os.Getenv("VERSION")
	}
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Creates a Terminal checkout request and sends it to the specified device to take a payment
// for the requested amount.
func (c *Client) Create(
	ctx context.Context,
	request *terminal.CreateTerminalCheckoutRequest,
	opts ...option.RequestOption,
) (*v2.CreateTerminalCheckoutResponse, error) {
	response, err := c.WithRawResponse.Create(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a filtered list of Terminal checkout requests created by the application making the request. Only Terminal checkout requests created for the merchant scoped to the OAuth token are returned. Terminal checkout requests are available for 30 days.
func (c *Client) Search(
	ctx context.Context,
	request *terminal.SearchTerminalCheckoutsRequest,
	opts ...option.RequestOption,
) (*v2.SearchTerminalCheckoutsResponse, error) {
	response, err := c.WithRawResponse.Search(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a Terminal checkout request by `checkout_id`. Terminal checkout requests are available for 30 days.
func (c *Client) Get(
	ctx context.Context,
	request *terminal.GetCheckoutsRequest,
	opts ...option.RequestOption,
) (*v2.GetTerminalCheckoutResponse, error) {
	response, err := c.WithRawResponse.Get(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Cancels a Terminal checkout request if the status of the request permits it.
func (c *Client) Cancel(
	ctx context.Context,
	request *terminal.CancelCheckoutsRequest,
	opts ...option.RequestOption,
) (*v2.CancelTerminalCheckoutResponse, error) {
	response, err := c.WithRawResponse.Cancel(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
