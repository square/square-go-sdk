// Code generated by Fern. DO NOT EDIT.

package refunds

import (
	context "context"
	v2 "github.com/square/square-go-sdk/v2"
	core "github.com/square/square-go-sdk/v2/core"
	internal "github.com/square/square-go-sdk/v2/internal"
	option "github.com/square/square-go-sdk/v2/option"
	terminal "github.com/square/square-go-sdk/v2/terminal"
	http "net/http"
	os "os"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.Token == "" {
		options.Token = os.Getenv("SQUARE_TOKEN")
	}
	if options.Version == "" {
		options.Version = os.Getenv("VERSION")
	}
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Creates a request to refund an Interac payment completed on a Square Terminal. Refunds for Interac payments on a Square Terminal are supported only for Interac debit cards in Canada. Other refunds for Terminal payments should use the Refunds API. For more information, see [Refunds API](api:Refunds).
func (c *Client) Create(
	ctx context.Context,
	request *terminal.CreateTerminalRefundRequest,
	opts ...option.RequestOption,
) (*v2.CreateTerminalRefundResponse, error) {
	response, err := c.WithRawResponse.Create(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request. Terminal refund requests are available for 30 days.
func (c *Client) Search(
	ctx context.Context,
	request *terminal.SearchTerminalRefundsRequest,
	opts ...option.RequestOption,
) (*v2.SearchTerminalRefundsResponse, error) {
	response, err := c.WithRawResponse.Search(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves an Interac Terminal refund object by ID. Terminal refund objects are available for 30 days.
func (c *Client) Get(
	ctx context.Context,
	request *terminal.GetRefundsRequest,
	opts ...option.RequestOption,
) (*v2.GetTerminalRefundResponse, error) {
	response, err := c.WithRawResponse.Get(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it.
func (c *Client) Cancel(
	ctx context.Context,
	request *terminal.CancelRefundsRequest,
	opts ...option.RequestOption,
) (*v2.CancelTerminalRefundResponse, error) {
	response, err := c.WithRawResponse.Cancel(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
