// This file was auto-generated by Fern from our API Definition.

package square

type BulkSwapPlanRequest struct {
	// The ID of the new subscription plan variation.
	//
	// This field is required.
	NewPlanVariationID string `json:"new_plan_variation_id" url:"-"`
	// The ID of the plan variation whose subscriptions should be swapped. Active subscriptions
	// using this plan variation will be subscribed to the new plan variation on their next billing
	// day.
	OldPlanVariationID string `json:"old_plan_variation_id" url:"-"`
	// The ID of the location to associate with the swapped subscriptions.
	LocationID string `json:"location_id" url:"-"`
}

type ChangeBillingAnchorDateRequest struct {
	// The anchor day for the billing cycle.
	MonthlyBillingAnchorDate *int `json:"monthly_billing_anchor_date,omitempty" url:"-"`
	// The `YYYY-MM-DD`-formatted date when the scheduled `BILLING_ANCHOR_CHANGE` action takes
	// place on the subscription.
	//
	// When this date is unspecified or falls within the current billing cycle, the billing anchor date
	// is changed immediately.
	EffectiveDate *string `json:"effective_date,omitempty" url:"-"`
}

type SwapPlanRequest struct {
	// The ID of the new subscription plan.
	//
	// Retired in favour of `new_plan_variation_id`.
	NewPlanID *string `json:"new_plan_id,omitempty" url:"-"`
	// The ID of the new subscription plan variation.
	//
	// This field is required.
	NewPlanVariationID *string `json:"new_plan_variation_id,omitempty" url:"-"`
	// A list of PhaseInputs, to pass phase-specific information used in the swap.
	Phases []*PhaseInput `json:"phases,omitempty" url:"-"`
}

type CreateSubscriptionRequest struct {
	// A unique string that identifies this `CreateSubscription` request.
	// If you do not provide a unique string (or provide an empty string as the value),
	// the endpoint treats each request as independent.
	//
	// For more information, see [Idempotency keys](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
	IdempotencyKey *string `json:"idempotency_key,omitempty" url:"-"`
	// The ID of the location the subscription is associated with.
	LocationID string `json:"location_id" url:"-"`
	// The ID of the [subscription plan](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations) created using the Catalog API.
	//
	// Retired in favour of `plan_variation_id`.
	//
	// For more information, see
	// [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/subscriptions-api/setup-plan) and
	// [Subscriptions Walkthrough](https://developer.squareup.com/docs/subscriptions-api/walkthrough).
	PlanID *string `json:"plan_id,omitempty" url:"-"`
	// The ID of the [subscription plan variation](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations#plan-variations) created using the Catalog API.
	PlanVariationID *string `json:"plan_variation_id,omitempty" url:"-"`
	// The ID of the [customer](entity:Customer) subscribing to the subscription plan variation.
	CustomerID string `json:"customer_id" url:"-"`
	// The `YYYY-MM-DD`-formatted date to start the subscription.
	// If it is unspecified, the subscription starts immediately.
	StartDate *string `json:"start_date,omitempty" url:"-"`
	// The `YYYY-MM-DD`-formatted date when the newly created subscription is scheduled for cancellation.
	//
	// This date overrides the cancellation date set in the plan variation configuration.
	// If the cancellation date is earlier than the end date of a subscription cycle, the subscription stops
	// at the canceled date and the subscriber is sent a prorated invoice at the beginning of the canceled cycle.
	//
	// When the subscription plan of the newly created subscription has a fixed number of cycles and the `canceled_date`
	// occurs before the subscription plan expires, the specified `canceled_date` sets the date when the subscription
	// stops through the end of the last cycle.
	CanceledDate *string `json:"canceled_date,omitempty" url:"-"`
	// The tax to add when billing the subscription.
	// The percentage is expressed in decimal form, using a `'.'` as the decimal
	// separator and without a `'%'` sign. For example, a value of 7.5
	// corresponds to 7.5%.
	TaxPercentage *string `json:"tax_percentage,omitempty" url:"-"`
	// A custom price which overrides the cost of a subscription plan variation with `STATIC` pricing.
	// This field does not affect itemized subscriptions with `RELATIVE` pricing. Instead,
	// you should edit the Subscription's [order template](https://developer.squareup.com/docs/subscriptions-api/manage-subscriptions#phases-and-order-templates).
	PriceOverrideMoney *Money `json:"price_override_money,omitempty" url:"-"`
	// The ID of the [subscriber's](entity:Customer) [card](entity:Card) to charge.
	// If it is not specified, the subscriber receives an invoice via email with a link to pay for their subscription.
	CardID *string `json:"card_id,omitempty" url:"-"`
	// The timezone that is used in date calculations for the subscription. If unset, defaults to
	// the location timezone. If a timezone is not configured for the location, defaults to "America/New_York".
	// Format: the IANA Timezone Database identifier for the location timezone. For
	// a list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
	Timezone *string `json:"timezone,omitempty" url:"-"`
	// The origination details of the subscription.
	Source *SubscriptionSource `json:"source,omitempty" url:"-"`
	// The day-of-the-month to change the billing date to.
	MonthlyBillingAnchorDate *int `json:"monthly_billing_anchor_date,omitempty" url:"-"`
	// array of phases for this subscription
	Phases []*Phase `json:"phases,omitempty" url:"-"`
}

type SubscriptionsGetRequest struct {
	// A query parameter to specify related information to be included in the response.
	//
	// The supported query parameter values are:
	//
	// - `actions`: to include scheduled actions on the targeted subscription.
	Include *string `json:"-" url:"include,omitempty"`
}

type SubscriptionsListEventsRequest struct {
	// When the total number of resulting subscription events exceeds the limit of a paged response,
	// specify the cursor returned from a preceding response here to fetch the next set of results.
	// If the cursor is unset, the response contains the last page of the results.
	//
	// For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// The upper limit on the number of subscription events to return
	// in a paged response.
	Limit *int `json:"-" url:"limit,omitempty"`
}

type PauseSubscriptionRequest struct {
	// The `YYYY-MM-DD`-formatted date when the scheduled `PAUSE` action takes place on the subscription.
	//
	// When this date is unspecified or falls within the current billing cycle, the subscription is paused
	// on the starting date of the next billing cycle.
	PauseEffectiveDate *string `json:"pause_effective_date,omitempty" url:"-"`
	// The number of billing cycles the subscription will be paused before it is reactivated.
	//
	// When this is set, a `RESUME` action is also scheduled to take place on the subscription at
	// the end of the specified pause cycle duration. In this case, neither `resume_effective_date`
	// nor `resume_change_timing` may be specified.
	PauseCycleDuration *int64 `json:"pause_cycle_duration,omitempty" url:"-"`
	// The date when the subscription is reactivated by a scheduled `RESUME` action.
	// This date must be at least one billing cycle ahead of `pause_effective_date`.
	ResumeEffectiveDate *string `json:"resume_effective_date,omitempty" url:"-"`
	// The timing whether the subscription is reactivated immediately or at the end of the billing cycle, relative to
	// `resume_effective_date`.
	// See [ChangeTiming](#type-changetiming) for possible values
	ResumeChangeTiming *ChangeTiming `json:"resume_change_timing,omitempty" url:"-"`
	// The user-provided reason to pause the subscription.
	PauseReason *string `json:"pause_reason,omitempty" url:"-"`
}

type ResumeSubscriptionRequest struct {
	// The `YYYY-MM-DD`-formatted date when the subscription reactivated.
	ResumeEffectiveDate *string `json:"resume_effective_date,omitempty" url:"-"`
	// The timing to resume a subscription, relative to the specified
	// `resume_effective_date` attribute value.
	// See [ChangeTiming](#type-changetiming) for possible values
	ResumeChangeTiming *ChangeTiming `json:"resume_change_timing,omitempty" url:"-"`
}

type SearchSubscriptionsRequest struct {
	// When the total number of resulting subscriptions exceeds the limit of a paged response,
	// specify the cursor returned from a preceding response here to fetch the next set of results.
	// If the cursor is unset, the response contains the last page of the results.
	//
	// For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
	Cursor *string `json:"cursor,omitempty" url:"-"`
	// The upper limit on the number of subscriptions to return
	// in a paged response.
	Limit *int `json:"limit,omitempty" url:"-"`
	// A subscription query consisting of specified filtering conditions.
	//
	// If this `query` field is unspecified, the `SearchSubscriptions` call will return all subscriptions.
	Query *SearchSubscriptionsQuery `json:"query,omitempty" url:"-"`
	// An option to include related information in the response.
	//
	// The supported values are:
	//
	// - `actions`: to include scheduled actions on the targeted subscriptions.
	Include []string `json:"include,omitempty" url:"-"`
}

type UpdateSubscriptionRequest struct {
	// The subscription object containing the current version, and fields to update.
	// Unset fields will be left at their current server values, and JSON `null` values will
	// be treated as a request to clear the relevant data.
	Subscription *Subscription `json:"subscription,omitempty" url:"-"`
}
