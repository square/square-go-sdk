// This file was auto-generated by Fern from our API Definition.

package square

type CompletePaymentRequest struct {
	// Used for optimistic concurrency. This opaque token identifies the current `Payment`
	// version that the caller expects. If the server has a different version of the Payment,
	// the update fails and a response with a VERSION_MISMATCH error is returned.
	VersionToken *string `json:"version_token,omitempty" url:"-"`
}

type CreatePaymentRequest struct {
	// The ID for the source of funds for this payment.
	// This could be a payment token generated by the Web Payments SDK for any of its
	// [supported methods](https://developer.squareup.com/docs/web-payments/overview#explore-payment-methods),
	// including cards, bank transfers, Afterpay or Cash App Pay. If recording a payment
	// that the seller received outside of Square, specify either "CASH" or "EXTERNAL".
	// For more information, see
	// [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments).
	SourceID string `json:"source_id" url:"-"`
	// A unique string that identifies this `CreatePayment` request. Keys can be any valid string
	// but must be unique for every `CreatePayment` request.
	//
	// Note: The number of allowed characters might be less than the stated maximum, if multi-byte
	// characters are used.
	//
	// For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
	IdempotencyKey string `json:"idempotency_key" url:"-"`
	// The amount of money to accept for this payment, not including `tip_money`.
	//
	// The amount must be specified in the smallest denomination of the applicable currency
	// (for example, US dollar amounts are specified in cents). For more information, see
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
	//
	// The currency code must match the currency associated with the business
	// that is accepting the payment.
	AmountMoney *Money `json:"amount_money,omitempty" url:"-"`
	// The amount designated as a tip, in addition to `amount_money`.
	//
	// The amount must be specified in the smallest denomination of the applicable currency
	// (for example, US dollar amounts are specified in cents). For more information, see
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
	//
	// The currency code must match the currency associated with the business
	// that is accepting the payment.
	TipMoney *Money `json:"tip_money,omitempty" url:"-"`
	// The amount of money that the developer is taking as a fee
	// for facilitating the payment on behalf of the seller.
	//
	// The amount cannot be more than 90% of the total amount of the payment.
	//
	// The amount must be specified in the smallest denomination of the applicable currency
	// (for example, US dollar amounts are specified in cents). For more information, see
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
	//
	// The fee currency code must match the currency associated with the seller
	// that is accepting the payment. The application must be from a developer
	// account in the same country and using the same currency code as the seller.
	//
	// For more information about the application fee scenario, see
	// [Take Payments and Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).
	//
	// To set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required.
	// For more information, see [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).
	AppFeeMoney *Money `json:"app_fee_money,omitempty" url:"-"`
	// The duration of time after the payment's creation when Square automatically
	// either completes or cancels the payment depending on the `delay_action` field value.
	// For more information, see
	// [Time threshold](https://developer.squareup.com/docs/payments-api/take-payments/card-payments/delayed-capture#time-threshold).
	//
	// This parameter should be specified as a time duration, in RFC 3339 format.
	//
	// Note: This feature is only supported for card payments. This parameter can only be set for a delayed
	// capture payment (`autocomplete=false`).
	//
	// Default:
	//
	// - Card-present payments: "PT36H" (36 hours) from the creation time.
	// - Card-not-present payments: "P7D" (7 days) from the creation time.
	DelayDuration *string `json:"delay_duration,omitempty" url:"-"`
	// The action to be applied to the payment when the `delay_duration` has elapsed. The action must be
	// CANCEL or COMPLETE. For more information, see
	// [Time Threshold](https://developer.squareup.com/docs/payments-api/take-payments/card-payments/delayed-capture#time-threshold).
	//
	// Default: CANCEL
	DelayAction *string `json:"delay_action,omitempty" url:"-"`
	// If set to `true`, this payment will be completed when possible. If
	// set to `false`, this payment is held in an approved state until either
	// explicitly completed (captured) or canceled (voided). For more information, see
	// [Delayed capture](https://developer.squareup.com/docs/payments-api/take-payments/card-payments#delayed-capture-of-a-card-payment).
	//
	// Default: true
	Autocomplete *bool `json:"autocomplete,omitempty" url:"-"`
	// Associates a previously created order with this payment.
	OrderID *string `json:"order_id,omitempty" url:"-"`
	// The [Customer](entity:Customer) ID of the customer associated with the payment.
	//
	// This is required if the `source_id` refers to a card on file created using the Cards API.
	CustomerID *string `json:"customer_id,omitempty" url:"-"`
	// The location ID to associate with the payment. If not specified, the [main location](https://developer.squareup.com/docs/locations-api#about-the-main-location) is
	// used.
	LocationID *string `json:"location_id,omitempty" url:"-"`
	// An optional [TeamMember](entity:TeamMember) ID to associate with
	// this payment.
	TeamMemberID *string `json:"team_member_id,omitempty" url:"-"`
	// A user-defined ID to associate with the payment.
	//
	// You can use this field to associate the payment to an entity in an external system
	// (for example, you might specify an order ID that is generated by a third-party shopping cart).
	ReferenceID *string `json:"reference_id,omitempty" url:"-"`
	// An identifying token generated by [payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer).
	// Verification tokens encapsulate customer device information and 3-D Secure
	// challenge results to indicate that Square has verified the buyer identity.
	//
	// For more information, see [SCA Overview](https://developer.squareup.com/docs/sca-overview).
	VerificationToken *string `json:"verification_token,omitempty" url:"-"`
	// If set to `true` and charging a Square Gift Card, a payment might be returned with
	// `amount_money` equal to less than what was requested. For example, a request for $20 when charging
	// a Square Gift Card with a balance of $5 results in an APPROVED payment of $5. You might choose
	// to prompt the buyer for an additional payment to cover the remainder or cancel the Gift Card
	// payment. This field cannot be `true` when `autocomplete = true`.
	//
	// For more information, see
	// [Partial amount with Square Gift Cards](https://developer.squareup.com/docs/payments-api/take-payments#partial-payment-gift-card).
	//
	// Default: false
	AcceptPartialAuthorization *bool `json:"accept_partial_authorization,omitempty" url:"-"`
	// The buyer's email address.
	BuyerEmailAddress *string `json:"buyer_email_address,omitempty" url:"-"`
	// The buyer's billing address.
	BillingAddress *Address `json:"billing_address,omitempty" url:"-"`
	// The buyer's shipping address.
	ShippingAddress *Address `json:"shipping_address,omitempty" url:"-"`
	// An optional note to be entered by the developer when creating a payment.
	Note *string `json:"note,omitempty" url:"-"`
	// Optional additional payment information to include on the customer's card statement
	// as part of the statement description. This can be, for example, an invoice number, ticket number,
	// or short description that uniquely identifies the purchase.
	//
	// Note that the `statement_description_identifier` might get truncated on the statement description
	// to fit the required information including the Square identifier (SQ *) and name of the
	// seller taking the payment.
	StatementDescriptionIdentifier *string `json:"statement_description_identifier,omitempty" url:"-"`
	// Additional details required when recording a cash payment (`source_id` is CASH).
	CashDetails *CashPaymentDetails `json:"cash_details,omitempty" url:"-"`
	// Additional details required when recording an external payment (`source_id` is EXTERNAL).
	ExternalDetails *ExternalPaymentDetails `json:"external_details,omitempty" url:"-"`
	// Details about the customer making the payment.
	CustomerDetails *CustomerDetails `json:"customer_details,omitempty" url:"-"`
	// An optional field for specifying the offline payment details. This is intended for
	// internal 1st-party callers only.
	OfflinePaymentDetails *OfflinePaymentDetails `json:"offline_payment_details,omitempty" url:"-"`
}

type PaymentsListRequest struct {
	// Indicates the start of the time range to retrieve payments for, in RFC 3339 format.
	// The range is determined using the `created_at` field for each Payment.
	// Inclusive. Default: The current time minus one year.
	BeginTime *string `json:"-" url:"begin_time,omitempty"`
	// Indicates the end of the time range to retrieve payments for, in RFC 3339 format. The
	// range is determined using the `created_at` field for each Payment.
	//
	// Default: The current time.
	EndTime *string `json:"-" url:"end_time,omitempty"`
	// The order in which results are listed by `Payment.created_at`:
	//
	// - `ASC` - Oldest to newest.
	// - `DESC` - Newest to oldest (default).
	SortOrder *string `json:"-" url:"sort_order,omitempty"`
	// A pagination cursor returned by a previous call to this endpoint.
	// Provide this cursor to retrieve the next set of results for the original query.
	//
	// For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Limit results to the location supplied. By default, results are returned
	// for the default (main) location associated with the seller.
	LocationID *string `json:"-" url:"location_id,omitempty"`
	// The exact amount in the `total_money` for a payment.
	Total *int64 `json:"-" url:"total,omitempty"`
	// The last four digits of a payment card.
	Last4 *string `json:"-" url:"last_4,omitempty"`
	// The brand of the payment card (for example, VISA).
	CardBrand *string `json:"-" url:"card_brand,omitempty"`
	// The maximum number of results to be returned in a single page.
	// It is possible to receive fewer results than the specified limit on a given page.
	//
	// The default value of 100 is also the maximum allowed value. If the provided value is
	// greater than 100, it is ignored and the default value is used instead.
	//
	// Default: `100`
	Limit *int `json:"-" url:"limit,omitempty"`
	// Whether the payment was taken offline or not.
	IsOfflinePayment *bool `json:"-" url:"is_offline_payment,omitempty"`
	// Indicates the start of the time range for which to retrieve offline payments, in RFC 3339
	// format for timestamps. The range is determined using the
	// `offline_payment_details.client_created_at` field for each Payment. If set, payments without a
	// value set in `offline_payment_details.client_created_at` will not be returned.
	//
	// Default: The current time.
	OfflineBeginTime *string `json:"-" url:"offline_begin_time,omitempty"`
	// Indicates the end of the time range for which to retrieve offline payments, in RFC 3339
	// format for timestamps. The range is determined using the
	// `offline_payment_details.client_created_at` field for each Payment. If set, payments without a
	// value set in `offline_payment_details.client_created_at` will not be returned.
	//
	// Default: The current time.
	OfflineEndTime *string `json:"-" url:"offline_end_time,omitempty"`
}

type UpdatePaymentRequest struct {
	// The updated `Payment` object.
	Payment *Payment `json:"payment,omitempty" url:"-"`
	// A unique string that identifies this `UpdatePayment` request. Keys can be any valid string
	// but must be unique for every `UpdatePayment` request.
	//
	// For more information, see [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
	IdempotencyKey string `json:"idempotency_key" url:"-"`
}
